name: Go

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
env:
  PLUGIN_NAME: obsidian-image-api-gateway
jobs:
  create-realese:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    needs: create-realese
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jobs:
          - { goos: darwin, goarch: arm64, cc: "" }
          - { goos: windows, goarch: amd64, cc: "", ext: ".exe"  }
          - { goos: linux, goarch: amd64, cc: "" }
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v5.1.0
        with:
          go-version: "1.23"

      - name: Set Time
        run: echo "TIME=`echo $(TZ='Asia/Shanghai' date +'%FT%T%z')`" >> $GITHUB_ENV
      - name: Get Tag Version
        run: echo "TAG_VERSION=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
      - name: Get Tag Version
        run: echo "LDFLAGS=-ldflags \"-X global.GitTag=${{ env.TAG_VERSION }} -X global.BuildTime=${{ env.TIME }}\"" >> $GITHUB_ENV

      - name: build
        run: |
          CGO_ENABLED=0 GOOS=${{ matrix.jobs.goos }} GOARCH=${{ matrix.jobs.goarch }} ${{ matrix.jobs.cc }} go build ${{ env.LDFLAGS }} -o ./build/${{ matrix.jobs.goos }}-${{ matrix.jobs.goarch }}/image-api${{ matrix.jobs.ext }}
          cp ./config/config.yaml ./build/${{ matrix.jobs.goos }}-${{ matrix.jobs.goarch }}/

      - name: GZip file
        id: gzip
        run: |
          tar -czvf ./build/${{ env.PLUGIN_NAME }}-${{ env.TAG_VERSION }}-${{ matrix.jobs.goos }}-${{ matrix.jobs.goarch }}.tar.gz -C ./build/${{ matrix.jobs.goos }}-${{ matrix.jobs.goarch }} .
      - name: Upload GZip file
        id: upload-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-realese.outputs.upload_url }}
          asset_path: ./build/${{ env.PLUGIN_NAME }}-${{ env.TAG_VERSION }}-${{ matrix.jobs.goos }}-${{ matrix.jobs.goarch }}.tar.gz
          asset_name: ${{ env.PLUGIN_NAME }}-${{ env.TAG_VERSION }}-${{ matrix.jobs.goos }}-${{ matrix.jobs.goarch }}.tar.gz
          asset_content_type: application/gzip
