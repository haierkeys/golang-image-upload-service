name: go-release-docker

on:
  workflow_dispatch:
  push:
    tags:
      - "*"
#env:
#  PLUGIN_NAME: obsidian-image-api-gateway
jobs:
  create-realese:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  build-push-docker:
    runs-on: ubuntu-latest
    needs: create-realese
    outputs:
      NAME: ${{ env.NAME }}
      IMAGE_TAG: ${{ env.IMAGE_TAG }}
      TAG_VERSION: ${{ env.TAG_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set NAME env
        run: echo NAME=$(basename ${GITHUB_REPOSITORY}) >> ${GITHUB_ENV}
      - name: Set IMAGE_TAG env
        run: echo IMAGE_TAG=$(basename ${GITHUB_REF}) >> ${GITHUB_ENV}
      - name: Set TAG_VERSION env
        run: echo "TAG_VERSION=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_ENV
      - name: Append latest if master branches # env '${IMAGE_TAG},latest'
        #eif: env.IMAGE_TAG == env.TAG_VERSION
        run: echo IMAGE_TAG=${IMAGE_TAG},master,latest >> ${GITHUB_ENV}
      - name: Environment Printer
        uses: managedkaos/print-env@v1.0

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: leslieleung/hello
      - uses: actions/setup-go@v3
        with:
          go-version: 1.23
      - name: Go Build Prepare
        run: go install github.com/mitchellh/gox@latest # 安装 gox
      - name: Go Build Multi-platform
        run: make gox-all
      - name: Upload Build File
        uses: actions/upload-artifact@v4
        with:
          name: build_file
          path: ./build/
      - name: Upload config
        uses: actions/upload-artifact@v4
        with:
          name: config
          path: ./config
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Build & Publish to Github Container Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          dockerfile: Dockerfile
          name: ${{ github.actor }}/${{ env.NAME }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          platforms: linux/amd64,linux/arm64
          registry: ghcr.io
          snapshot: false
          tags: "${{ env.IMAGE_TAG }}"
      - name: Build & Publish to DockerHub
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          dockerfile: Dockerfile
          name: ${{ github.actor }}/${{ env.NAME }}
#          name: ${{ github.repository }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          platforms: linux/amd64,linux/arm64
          snapshot: false
          tags: "${{ env.IMAGE_TAG }}"
  push-realese:
    needs: [create-realese, build-push-docker]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jobs:
          - { goos: darwin, goarch: amd64, cc: "" }
          - { goos: darwin, goarch: arm64, cc: "" }
          - { goos: linux, goarch: amd64, cc: "" }
          - { goos: linux, goarch: arm64, cc: "" }
          - { goos: windows, goarch: amd64, cc: "", ext: ".exe"  }
    steps:
      - name: Set NAME env
        run: echo NAME=${{ needs.build-push-docker.outputs.NAME }}-${{ needs.build-push-docker.outputs.TAG_VERSION }} >> ${GITHUB_ENV}
      - name: Download math result for build-push-docker
        uses: actions/download-artifact@v4
        with:
          name: build_file
          path: ./build/
      - name: Download math result for build-push-docker
        uses: actions/download-artifact@v4
        with:
          name: config
          path: ./config
      - name: GZip file
        id: gzip
        run: |
          tar -czvf ./build/${{ env.NAME }}-${{ matrix.jobs.goos }}-${{ matrix.jobs.goarch }}.tar.gz ./config  -C ./build/${{ matrix.jobs.goos }}_${{ matrix.jobs.goarch }}/ .
      - name: Upload GZip file
        id: upload-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-realese.outputs.upload_url }}
          asset_path: ./build/${{ env.NAME }}-${{ matrix.jobs.goos }}-${{ matrix.jobs.goarch }}.tar.gz
          asset_name: ${{ env.NAME }}-${{ matrix.jobs.goos }}-${{ matrix.jobs.goarch }}.tar.gz
          asset_content_type: application/gzip